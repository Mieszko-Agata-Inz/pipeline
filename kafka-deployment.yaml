apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe --file compose.yaml -v convert
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: kafka
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kafka
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe --file compose.yaml -v convert
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/pipeline-default: "true"
        io.kompose.service: kafka
    spec:
      containers:
        - args:
            - sh
            - -c
            - '((sleep 15 && kafka-topics --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic weather_data)&) && /etc/confluent/docker/run '
          env:
            - name: KAFKA_ADVERTISED_LISTENERS
              value: INTERNAL://kafka:19092,EXTERNAL://127.0.0.1:9092,PLAINTEXT_HOST://kafka:29092
            - name: KAFKA_BROKER_ID
              value: "0"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: INTERNAL
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper:2181
          image: confluentinc/cp-kafka:6.0.14
          name: kafka
          ports:
            - containerPort: 9092
              hostPort: 9092
              protocol: TCP
            - containerPort: 29092
              hostPort: 29092
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}
